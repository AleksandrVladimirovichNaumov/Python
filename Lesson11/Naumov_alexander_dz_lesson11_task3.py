# Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
# работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на
# экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода
# пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если
# введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

import re

class OnlyNumbers(Exception):
    def __init__(self, error_message):
        self.message = error_message

list_of_numbers = []
item = 0
while True:
    number = input(f'enter {item} item in a list or enter "stop" to finish: ')

    if number.lower() == 'stop':
        break
    else:
        try:
            RE_NUMBER = re.compile(r"^-?\d+\.?\d*$")
            if not RE_NUMBER.match(number):
                raise OnlyNumbers('not a number')
        except OnlyNumbers as e:
            print(e)
        else:
            list_of_numbers.append(float(number))
            item += 1


print(list_of_numbers)
